// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/scylladb/scylla-operator/pkg/externalapi/integreatly/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GrafanaFolderLister helps list GrafanaFolders.
// All objects returned here must be treated as read-only.
type GrafanaFolderLister interface {
	// List lists all GrafanaFolders in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GrafanaFolder, err error)
	// GrafanaFolders returns an object that can list and get GrafanaFolders.
	GrafanaFolders(namespace string) GrafanaFolderNamespaceLister
	GrafanaFolderListerExpansion
}

// grafanaFolderLister implements the GrafanaFolderLister interface.
type grafanaFolderLister struct {
	indexer cache.Indexer
}

// NewGrafanaFolderLister returns a new GrafanaFolderLister.
func NewGrafanaFolderLister(indexer cache.Indexer) GrafanaFolderLister {
	return &grafanaFolderLister{indexer: indexer}
}

// List lists all GrafanaFolders in the indexer.
func (s *grafanaFolderLister) List(selector labels.Selector) (ret []*v1alpha1.GrafanaFolder, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GrafanaFolder))
	})
	return ret, err
}

// GrafanaFolders returns an object that can list and get GrafanaFolders.
func (s *grafanaFolderLister) GrafanaFolders(namespace string) GrafanaFolderNamespaceLister {
	return grafanaFolderNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GrafanaFolderNamespaceLister helps list and get GrafanaFolders.
// All objects returned here must be treated as read-only.
type GrafanaFolderNamespaceLister interface {
	// List lists all GrafanaFolders in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GrafanaFolder, err error)
	// Get retrieves the GrafanaFolder from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.GrafanaFolder, error)
	GrafanaFolderNamespaceListerExpansion
}

// grafanaFolderNamespaceLister implements the GrafanaFolderNamespaceLister
// interface.
type grafanaFolderNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GrafanaFolders in the indexer for a given namespace.
func (s grafanaFolderNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GrafanaFolder, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GrafanaFolder))
	})
	return ret, err
}

// Get retrieves the GrafanaFolder from the indexer for a given namespace and name.
func (s grafanaFolderNamespaceLister) Get(name string) (*v1alpha1.GrafanaFolder, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("grafanafolder"), name)
	}
	return obj.(*v1alpha1.GrafanaFolder), nil
}
