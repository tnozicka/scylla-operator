// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/scylladb/scylla-operator/pkg/externalapi/integreatly/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GrafanaDataSourceLister helps list GrafanaDataSources.
// All objects returned here must be treated as read-only.
type GrafanaDataSourceLister interface {
	// List lists all GrafanaDataSources in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GrafanaDataSource, err error)
	// GrafanaDataSources returns an object that can list and get GrafanaDataSources.
	GrafanaDataSources(namespace string) GrafanaDataSourceNamespaceLister
	GrafanaDataSourceListerExpansion
}

// grafanaDataSourceLister implements the GrafanaDataSourceLister interface.
type grafanaDataSourceLister struct {
	indexer cache.Indexer
}

// NewGrafanaDataSourceLister returns a new GrafanaDataSourceLister.
func NewGrafanaDataSourceLister(indexer cache.Indexer) GrafanaDataSourceLister {
	return &grafanaDataSourceLister{indexer: indexer}
}

// List lists all GrafanaDataSources in the indexer.
func (s *grafanaDataSourceLister) List(selector labels.Selector) (ret []*v1alpha1.GrafanaDataSource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GrafanaDataSource))
	})
	return ret, err
}

// GrafanaDataSources returns an object that can list and get GrafanaDataSources.
func (s *grafanaDataSourceLister) GrafanaDataSources(namespace string) GrafanaDataSourceNamespaceLister {
	return grafanaDataSourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GrafanaDataSourceNamespaceLister helps list and get GrafanaDataSources.
// All objects returned here must be treated as read-only.
type GrafanaDataSourceNamespaceLister interface {
	// List lists all GrafanaDataSources in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GrafanaDataSource, err error)
	// Get retrieves the GrafanaDataSource from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.GrafanaDataSource, error)
	GrafanaDataSourceNamespaceListerExpansion
}

// grafanaDataSourceNamespaceLister implements the GrafanaDataSourceNamespaceLister
// interface.
type grafanaDataSourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GrafanaDataSources in the indexer for a given namespace.
func (s grafanaDataSourceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GrafanaDataSource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GrafanaDataSource))
	})
	return ret, err
}

// Get retrieves the GrafanaDataSource from the indexer for a given namespace and name.
func (s grafanaDataSourceNamespaceLister) Get(name string) (*v1alpha1.GrafanaDataSource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("grafanadatasource"), name)
	}
	return obj.(*v1alpha1.GrafanaDataSource), nil
}
